<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on EdAnisko.com</title>
    <link>https://edanisko.com/posts/</link>
    <description>Recent content in Posts on EdAnisko.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Sep 2020 20:47:51 -0800</lastBuildDate>
    
	<atom:link href="https://edanisko.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DynamoDB - What You Need to Know</title>
      <link>https://edanisko.com/posts/2020-09-30-dynamodb-what-you-need-to-know/</link>
      <pubDate>Wed, 30 Sep 2020 20:47:51 -0800</pubDate>
      
      <guid>https://edanisko.com/posts/2020-09-30-dynamodb-what-you-need-to-know/</guid>
      <description>&lt;p&gt;DynamoDB lets you scale indefinately while maintaining single digit millisecond response times.  If you need to read that again go ahead but I&amp;rsquo;ll break it down again.  With DynamoDB you can store as much structured data as you like.  Your queries will always return lighting fast.  If that sounds different that what you data team has been telling you, send them a link to this post.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Quasar Queries</title>
      <link>https://edanisko.com/posts/2020-08-05-quasar-queries/</link>
      <pubDate>Wed, 05 Aug 2020 22:45:54 -0800</pubDate>
      
      <guid>https://edanisko.com/posts/2020-08-05-quasar-queries/</guid>
      <description>&lt;p&gt;Adding alpaca api to a node project so I can buy a share of QQQ or AAPL.&lt;/p&gt;
&lt;p&gt;Its easy enough to use the alpaca CLI in a flat js file.  Next step is to add it to an application, add a few buttons and so on.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laravel Nova - Big Filter Menu</title>
      <link>https://edanisko.com/posts/2019-03-04-laravel-nova-big-filter-menu/</link>
      <pubDate>Mon, 04 Mar 2019 22:45:54 -0800</pubDate>
      
      <guid>https://edanisko.com/posts/2019-03-04-laravel-nova-big-filter-menu/</guid>
      <description>&lt;p&gt;Laravel Nova is a great way to get an admin panel up and running. If you built your project with Laravel, Nova will fit right on top. You can create resources based on your models. The resources have all sorts of fields so you can display&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Laravel Permissions - Working with Roles</title>
      <link>https://edanisko.com/posts/2019-02-24-laravel-permissions-working-with-roles/</link>
      <pubDate>Sun, 24 Feb 2019 23:00:55 -0800</pubDate>
      
      <guid>https://edanisko.com/posts/2019-02-24-laravel-permissions-working-with-roles/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Install the Package&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Laravel has a way of authorizing a user to act on an object. Please read the &lt;a href=&#34;https://laravel.com/docs/master/authorization&#34;&gt;docs&lt;/a&gt; if you like. You will start off writing Gates. Gates allow and deny access to actions. You can define Gate&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>